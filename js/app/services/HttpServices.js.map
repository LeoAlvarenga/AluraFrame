{"version":3,"sources":["../../app-es6/services/HttpServices.js"],"names":["HttpServices","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,Y;;;;;;;sCAGYC,G,EAAK;AACf,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AAEN,mBAAOC,MAAMD,GAAN,EAAWE,IAAX,CAAgB;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aAAhB,EAAgDM,IAAhD,CAAqD;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAArD,CAAP;AACF;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS;AACL,oCAAiB;AADZ,iBADK;AAIdC,wBAAQ,MAJM;AAKdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AALQ,aAAX,EAMJH,IANI,CAMC;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aAND,CAAP;AAOH","file":"HttpServices.js","sourcesContent":["class HttpServices {\n\n\n    _handleErrors(res) {\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n\n       return fetch(url).then(res => this._handleErrors(res)).then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: {\n                'Content-type' : 'application/json',\n            },\n            method: 'post',\n            body: JSON.stringify(dado)\n        }).then(res => this._handleErrors(res));\n    }\n}"]}