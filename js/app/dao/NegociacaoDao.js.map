{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","erro","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","error","name","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAELP,UAFK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBC,wCAAQC,GAAR,CAAY,CAAZ;AACAR;AACH,6BAHD;;AAKAE,oCAAQO,OAAR,GAAkB,aAAK;AACnBF,wCAAQC,GAAR,CAAY,CAAZ;AACAD,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,IAArB;AACAX,uCAAO,yCAAP;AACH,6BAJD;AAKH,yBAjBM,CAAP;AAmBH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACRO,WADQ,CACI,OAAKP,MADT,EAERiB,UAFQ,EAAb;;AAIA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;;AAEpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAID,KAAJ,EAAW;;AAEP,wCAAIE,OAAOF,MAAMG,KAAjB;AACA,wCAAGD,IAAH,EACAH,YAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,0CAAMS,QAAN;AACH,iCAPD,MAOO;AACHlB,4CAAQC,GAAR,CAAY,cAAZ,EAA4BO,WAA5B;AACAf,4CAAQe,WAAR;AACH;AACJ,6BAfD;;AAiBAF,mCAAOJ,OAAP,GAAiB,aAAK;;AAElBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASe,KAAT,CAAeC,IAA3B;AACA1B,uCAAO,wCAAP;AACH,6BAJD;AAKH,yBA9BM,CAAP;AA+BH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,OAAKP,MADR,EAET+B,KAFS,EAAd;;AAII1B,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,mCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQO,OAAR,GAAkB,aAAK;;AAEnBF,wCAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASe,KAArB;AACAzB,uCAAO,yCAAP;AACH,6BAJD;AAKP,yBAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["export class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n\n            request.onsuccess = e => {\n                console.log(2)\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(3);\n                console.log(e.target.erro);\n                reject('Não foi possível adicionar a negociação');\n            };\n        });\n\n    }\n\n    listaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n\n                let atual = e.target.result;\n\n                if (atual) {\n\n                    let dado = atual.value;\n                    if(dado)\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n                } else {\n                    console.log('lista todos:', negociacoes);\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = e => {\n\n                console.log(e.target.error.name);\n                reject('Não foi possível listar as negociações');\n            };\n        });\n    }\n    \n    apagaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n                request.onsuccess = e => resolve('Negociações removidas com sucesso');\n\n                request.onerror = e => {\n\n                    console.log(e.target.error);\n                    reject('Não foi possível remover as negociações');\n                }\n        });\n    }\n}"]}