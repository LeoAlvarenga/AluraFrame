{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","console","log","onerror","e","target","erro","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","error","name","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AAEjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAELP,UAFK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBC,4BAAQC,GAAR,CAAY,CAAZ;AACAR;AACH,iBAHD;;AAKAE,wBAAQO,OAAR,GAAkB,aAAK;AACnBF,4BAAQC,GAAR,CAAY,CAAZ;AACAD,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASC,IAArB;AACAX,2BAAO,yCAAP;AACH,iBAJD;AAKH,aAjBM,CAAP;AAmBH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACRO,WADQ,CACI,OAAKP,MADT,EAERiB,UAFQ,EAAb;;AAIA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAK;;AAEpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAW;;AAEP,4BAAIE,OAAOF,MAAMG,KAAjB;AACA,4BAAGD,IAAH,EACAH,YAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,8BAAMS,QAAN;AACH,qBAPD,MAOO;AACHlB,gCAAQC,GAAR,CAAY,cAAZ,EAA4BO,WAA5B;AACAf,gCAAQe,WAAR;AACH;AACJ,iBAfD;;AAiBAF,uBAAOJ,OAAP,GAAiB,aAAK;;AAElBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASe,KAAT,CAAeC,IAA3B;AACA1B,2BAAO,wCAAP;AACH,iBAJD;AAKH,aA9BM,CAAP;AA+BH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,OAAKP,MADR,EAET+B,KAFS,EAAd;;AAII1B,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQO,OAAR,GAAkB,aAAK;;AAEnBF,4BAAQC,GAAR,CAAYE,EAAEC,MAAF,CAASe,KAArB;AACAzB,2BAAO,yCAAP;AACH,iBAJD;AAKP,aAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n\n            request.onsuccess = e => {\n                console.log(2)\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(3);\n                console.log(e.target.erro);\n                reject('Não foi possível adicionar a negociação');\n            };\n        });\n\n    }\n\n    listaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = e => {\n\n                let atual = e.target.result;\n\n                if (atual) {\n\n                    let dado = atual.value;\n                    if(dado)\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n\n                    atual.continue();\n                } else {\n                    console.log('lista todos:', negociacoes);\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = e => {\n\n                console.log(e.target.error.name);\n                reject('Não foi possível listar as negociações');\n            };\n        });\n    }\n    \n    apagaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n                request.onsuccess = e => resolve('Negociações removidas com sucesso');\n\n                request.onerror = e => {\n\n                    console.log(e.target.error);\n                    reject('Não foi possível remover as negociações');\n                }\n        });\n    }\n}"]}